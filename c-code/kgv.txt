// kgV von x = 24 und y = 9
		LDA #24
		STA 1
		LDA #9
		STA 2
		LDA (1)  // x und y Zwischenspeichern	  
		STA 11
		LDA (2)
        SUB #1
		STA 12
mul:    LDA (11)  // addiere x y-mal auf das bisherige Ergebnis der Multiplikation
		ADD (1)
		STA 11
		LDA (12) // Multiplikator dekrementieren
		SUB #1
		BRZ mulEnd:
		STA 12   // dekrementierten Multiplikator speichern	
		JMP mul:
mulEnd:	NOP // Ergebnis x*y in (11)
		LDA (1)  // x und y Zwischenspeichern
		STA 21
		LDA (2)
		STA 22
ggt:  	LDA (21)  // 24 - 9 im ersten Schritt
		SUB (22)
		BRN swp:
		BRZ ggtEnd: // ggT in (22)
		STA 21   // Ergebnis speichern in (21)
		JMP ggt:
swp:  	LDA (22)   // Divisor zwischenspeichern
		STA 23		 
		LDA (21)  // Rest als neuer Divisor speichern
		STA 22
		LDA (23)  // Alter Divisor als neuen Divident speichern
		STA 21
		JMP ggt:
ggtEnd: NOP       // ggT in (22)
div:	LDA (11) // Produkt x*y durch ggT(x,y) teilen
		SUB (22)
		BRZ end:
		STA (11) 
		JMP div:
end:    NOP	// kgV in (11)	
		
